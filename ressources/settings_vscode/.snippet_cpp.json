{
	"Print with std::cout and std::endl": {
		"prefix": "pprint",
		"body": [
			"cout << \"$1\" << endl;"
		],
		"description": "Print with std::cout and std::endl"
	},
	"Print canonical class in cpp": {
		"prefix": "can_class",
		"body": [
			"#pragma once",
			"",
			"#include \"utils_template.hpp\"",
			"",
			"class $1",
			"{",
			"",
			"private:",
			"",
			"    // Some private members",
			"",
			"protected:",
			"",
			"    // Some protected members",
			"",
			"public:",
			"",
			"    $1( void );",
			"    $1( const $1& copy );",
			"    $1& operator=( const $1& right_operator );",
			"    ~$1();",
			"",
			"};",
			"",
			"ostream& operator<<( ostream& output_stream, const $1& input );",
			"",
			"",
			"// ---------- Functions declarations ---------------",
			"",
			"",
			"$1::$1( void ){}",
			"",
			"",
			"$1::$1( const $1& copy ) :",
			"	_foo(copy._foo), // List init each value individually",
			"	_bar(copy._bar) {}",
			"",
			"",
			"$1& $1::operator=( const $1& right_operator ){",
			"",
			"    if (this != &right_operator){",
			"        // Reassign every value with the getter value ",
			"        // this->_foo = right_operator.getFoo()",
			"    }",
			"    return *this;",
			"}",
			"",
			"",
			"$1::~$1( void ){}",
			"",
			"",
			"ostream& operator<<( ostream& output_stream, const $1& right_input ){",
			"",
			"    // output_stream << right_input.PutAGetterFunctionhere();",
			"",
			"    return output_stream;",
			"}",
			"",

		],
		"description": "Print canonical class in cpp"
	}
}